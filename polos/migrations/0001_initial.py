# Generated by Django 5.2.6 on 2025-09-30 22:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Polo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Polo')),
                ('cep', models.CharField(max_length=9, verbose_name='CEP')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('numero', models.CharField(max_length=20, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(max_length=100, verbose_name='Bairro')),
                ('cidade', models.CharField(max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(max_length=2, verbose_name='Estado')),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True, verbose_name='Longitude')),
                ('telefone', models.CharField(max_length=20, verbose_name='Telefone')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('cursos_oferecidos', models.TextField(verbose_name='Cursos Oferecidos')),
                ('horario_atendimento', models.TextField(verbose_name='Horário de Atendimento')),
                ('atividades_extras', models.TextField(blank=True, null=True, verbose_name='Atividades Extras')),
                ('atividades_esportivas', models.TextField(blank=True, null=True, verbose_name='Atividades Esportivas')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('ultima_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Polo',
                'verbose_name_plural': 'Polos',
                'ordering': ['cidade', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone')),
                ('tipo_feedback', models.CharField(choices=[('sugestao', 'Sugestão'), ('problema', 'Problema'), ('elogio', 'Elogio'), ('acessibilidade', 'Problema de Acessibilidade'), ('outro', 'Outro')], max_length=20, verbose_name='Tipo de Feedback')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('pagina_origem', models.CharField(help_text='Página onde o feedback foi enviado', max_length=255, verbose_name='Página de Origem')),
                ('data_envio', models.DateTimeField(auto_now_add=True, verbose_name='Data de Envio')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('em_analise', 'Em Análise'), ('resolvido', 'Resolvido'), ('fechado', 'Fechado')], default='pendente', max_length=20, verbose_name='Status')),
                ('resposta', models.TextField(blank=True, null=True, verbose_name='Resposta')),
                ('data_resposta', models.DateTimeField(blank=True, null=True, verbose_name='Data da Resposta')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'ordering': ['-data_envio'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('aws_iam_user_id', models.CharField(blank=True, help_text='ID do usuário no AWS IAM', max_length=255, null=True, verbose_name='AWS IAM User ID')),
                ('aws_iam_role', models.CharField(blank=True, help_text='Role do usuário no AWS IAM', max_length=255, null=True, verbose_name='AWS IAM Role')),
                ('last_aws_sync', models.DateTimeField(blank=True, help_text='Data e hora da última sincronização com AWS IAM', null=True, verbose_name='Última sincronização com AWS')),
                ('is_local_only', models.BooleanField(default=True, help_text='Indica se o usuário é apenas local ou também existe no AWS IAM', verbose_name='Usuário Local')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuário',
                'verbose_name_plural': 'usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
